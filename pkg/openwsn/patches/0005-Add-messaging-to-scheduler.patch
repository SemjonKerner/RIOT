From b68ce568ac0d90730c97f375c0ee461855c378b7 Mon Sep 17 00:00:00 2001
From: PeterKietzmann <peter.kietzmann@haw-hamburg.de>
Date: Wed, 14 Feb 2018 16:02:25 +0100
Subject: [PATCH 5/6] Add messaging to scheduler

---
 kernel/openos/scheduler.c | 62 ++++++++++++++++++++++++++++++-----------------
 1 file changed, 40 insertions(+), 22 deletions(-)

diff --git a/kernel/openos/scheduler.c b/kernel/openos/scheduler.c
index 34ce8ca3..ed30afae 100644
--- a/kernel/openos/scheduler.c
+++ b/kernel/openos/scheduler.c
@@ -9,12 +9,15 @@
 #include "board_ow.h"
 #include "debugpins.h"
 #include "leds.h"
+#include "openwsn.h"
 
 //=========================== variables =======================================
 
 scheduler_vars_t scheduler_vars;
 scheduler_dbg_t  scheduler_dbg;
 
+static kernel_pid_t openwsn_sched_pid = KERNEL_PID_UNDEF;
+
 //=========================== prototypes ======================================
 
 void consumeTask(uint8_t taskId);
@@ -33,32 +36,43 @@ void scheduler_init(void) {
 
 void scheduler_start(void) {
    taskList_item_t* pThisTask;
+
+   msg_t msg;
+   msg_t msg_queue[8];
+   /* initialize message queue */
+   msg_init_queue(msg_queue, 8);
+
+   openwsn_sched_pid = thread_getpid();
+
    while (1) {
-      while(scheduler_vars.task_list!=NULL) {
-         // there is still at least one task in the linked-list of tasks
-         
-    	 INTERRUPT_DECLARATION();
-    	 DISABLE_INTERRUPTS();
-
-         // the task to execute is the one at the head of the queue
-         pThisTask                = scheduler_vars.task_list;
-         
-         // shift the queue by one task
-         scheduler_vars.task_list = pThisTask->next;
-         
-         ENABLE_INTERRUPTS();
-
-         // execute the current task
-         pThisTask->cb();
-         
-         // free up this task container
-         pThisTask->cb            = NULL;
-         pThisTask->prio          = TASKPRIO_NONE;
-         pThisTask->next          = NULL;
-         scheduler_dbg.numTasksCur--;
+      if(msg.type == OW_SCHED_MSG_TYPE_EVENT) {
+         while(scheduler_vars.task_list!=NULL) {
+            // there is still at least one task in the linked-list of tasks
+
+            INTERRUPT_DECLARATION();
+            DISABLE_INTERRUPTS();
+
+            // the task to execute is the one at the head of the queue
+            pThisTask                = scheduler_vars.task_list;
+
+            // shift the queue by one task
+            scheduler_vars.task_list = pThisTask->next;
+
+            ENABLE_INTERRUPTS();
+
+            // execute the current task
+            pThisTask->cb();
+
+            // free up this task container
+            pThisTask->cb            = NULL;
+            pThisTask->prio          = TASKPRIO_NONE;
+            pThisTask->next          = NULL;
+            scheduler_dbg.numTasksCur--;
+         }
       }
       debugpins_task_clr();
       board_sleep();
+      msg_receive(&msg);
       debugpins_task_set();                      // IAR should halt here if nothing to do
    }
 }
@@ -105,6 +119,10 @@ void scheduler_start(void) {
    }
    
    ENABLE_INTERRUPTS();
+
+   msg_t msg;
+   msg.type = OW_SCHED_MSG_TYPE_EVENT;
+   msg_send(&msg, openwsn_sched_pid);
 }
 
 //=========================== private =========================================
-- 
2.14.1

